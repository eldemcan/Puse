package Svg;

import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;

import org.apache.batik.swing.JSVGCanvas;

import net.sourceforge.plantuml.FileFormat;
import net.sourceforge.plantuml.FileFormatOption;
import net.sourceforge.plantuml.SourceStringReader;

public class Svg {

	SourceStringReader reader;
	ByteArrayOutputStream os;
	FileFormatOption f_option;
	

	public String installSvg(String code){

		System.out.println("code"+code);
		reader = new SourceStringReader(code.trim());
		os = new ByteArrayOutputStream();
		f_option = new FileFormatOption(FileFormat.SVG); 
		String validationmessage="";
		String svg="";

		try {
			validationmessage=reader.generateImage(os,f_option);
			System.out.println("validation message is:"+validationmessage);
			// The XML is stored into svg
			svg = new String(os.toByteArray());
		} catch (IOException e) {
			System.out.println("could not generate the image");
			validationmessage="error could not generate the image";
		}
		
		if(validationmessage==null){
		    validationmessage=" ";
		    return validationmessage;
		}

		else if((validationmessage.contains("error") || validationmessage.contains("ERROR"))){
			return validationmessage;
		}//if

		else{
				validationmessage="correct syntax";
				
			try {
				FileWriter fstream = new FileWriter(Data.temp_output_svgfile_name);
				BufferedWriter wr = new BufferedWriter(fstream);
				wr.write(svg);
				wr.close();
				//reload(Data.temp_output_svgfile_name);
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			try {
				os.close();
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
				return validationmessage;		
		}//else
	}//end of displaysvg

	public JSVGCanvas reload(JSVGCanvas svgCanvas,String name){

		File f = new  File(name);
		try {
			svgCanvas.setURI(f.toURL().toString());
			System.out.println("reload is complete");
		} catch (MalformedURLException e) {
			System.out.println("could not load the svg");
		}
		return svgCanvas;
	}//end of reaload

}//end of class
